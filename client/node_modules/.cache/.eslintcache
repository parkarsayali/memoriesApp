[{"D:\\archivesApp\\client\\src\\index.js":"1","D:\\archivesApp\\client\\src\\App.js":"2","D:\\archivesApp\\client\\src\\Components\\Form\\Form.js":"3","D:\\archivesApp\\client\\src\\Components\\Posts\\Posts.js":"4","D:\\archivesApp\\client\\src\\Components\\Posts\\Post\\Post.js":"5","D:\\archivesApp\\client\\src\\styles.js":"6","D:\\archivesApp\\client\\src\\Components\\Posts\\Post\\styles.js":"7","D:\\archivesApp\\client\\src\\Components\\Posts\\styles.js":"8","D:\\archivesApp\\client\\src\\Components\\Form\\styles.js":"9","D:\\archivesApp\\client\\src\\reducers\\index.js":"10","D:\\archivesApp\\client\\src\\reducers\\posts.js":"11","D:\\archivesApp\\client\\src\\actions\\posts.js":"12","D:\\archivesApp\\client\\src\\api\\index.js":"13","D:\\memoriesApp\\client\\src\\index.js":"14","D:\\memoriesApp\\client\\src\\App.js":"15","D:\\memoriesApp\\client\\src\\reducers\\index.js":"16","D:\\memoriesApp\\client\\src\\styles.js":"17","D:\\memoriesApp\\client\\src\\actions\\posts.js":"18","D:\\memoriesApp\\client\\src\\Components\\Posts\\Posts.js":"19","D:\\memoriesApp\\client\\src\\reducers\\posts.js":"20","D:\\memoriesApp\\client\\src\\Components\\Form\\Form.js":"21","D:\\memoriesApp\\client\\src\\Components\\Posts\\styles.js":"22","D:\\memoriesApp\\client\\src\\Components\\Form\\styles.js":"23","D:\\memoriesApp\\client\\src\\api\\index.js":"24","D:\\memoriesApp\\client\\src\\Components\\Posts\\Post\\Post.js":"25","D:\\memoriesApp\\client\\src\\Components\\Posts\\Post\\styles.js":"26","D:\\memoriesApp\\client\\src\\constants\\actionTypes.js":"27"},{"size":477,"mtime":1670488448958,"results":"28","hashOfConfig":"29"},{"size":1400,"mtime":1670609259731,"results":"30","hashOfConfig":"29"},{"size":3729,"mtime":1670609259746,"results":"31","hashOfConfig":"29"},{"size":819,"mtime":1670609259771,"results":"32","hashOfConfig":"29"},{"size":3576,"mtime":1670609259755,"results":"33","hashOfConfig":"29"},{"size":356,"mtime":1670242719385,"results":"34","hashOfConfig":"29"},{"size":1002,"mtime":1670245684254,"results":"35","hashOfConfig":"29"},{"size":247,"mtime":1670332373835,"results":"36","hashOfConfig":"29"},{"size":431,"mtime":1670341043011,"results":"37","hashOfConfig":"29"},{"size":123,"mtime":1670316838850,"results":"38","hashOfConfig":"29"},{"size":265,"mtime":1670609259794,"results":"39","hashOfConfig":"29"},{"size":689,"mtime":1670609259777,"results":"40","hashOfConfig":"29"},{"size":266,"mtime":1670609259780,"results":"41","hashOfConfig":"29"},{"size":477,"mtime":1670488448958,"results":"42","hashOfConfig":"43"},{"size":1549,"mtime":1670666297514,"results":"44","hashOfConfig":"43"},{"size":123,"mtime":1670316838850,"results":"45","hashOfConfig":"43"},{"size":356,"mtime":1670242719385,"results":"46","hashOfConfig":"43"},{"size":1479,"mtime":1670686792988,"results":"47","hashOfConfig":"43"},{"size":863,"mtime":1670666190421,"results":"48","hashOfConfig":"43"},{"size":501,"mtime":1670668622984,"results":"49","hashOfConfig":"43"},{"size":4302,"mtime":1670683501281,"results":"50","hashOfConfig":"43"},{"size":247,"mtime":1670332373835,"results":"51","hashOfConfig":"43"},{"size":431,"mtime":1670341043011,"results":"52","hashOfConfig":"43"},{"size":501,"mtime":1670668393516,"results":"53","hashOfConfig":"43"},{"size":4108,"mtime":1670683857906,"results":"54","hashOfConfig":"43"},{"size":1002,"mtime":1670245684254,"results":"55","hashOfConfig":"43"},{"size":167,"mtime":1670686597894,"results":"56","hashOfConfig":"43"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"arc749",{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b1cvhv",{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\archivesApp\\client\\src\\index.js",[],[],"D:\\archivesApp\\client\\src\\App.js",[],[],"D:\\archivesApp\\client\\src\\Components\\Form\\Form.js",["142"],[],"import { useStyles } from \"./styles\";\r\nimport { Typography, TextField, Button, Paper } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport FileBase from \"react-file-base64\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createPost } from \"../../actions/posts\";\r\n\r\nconst Form = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"submit clicked\");\r\n    dispatch(createPost(postData));\r\n  };\r\n\r\n  const handleCreatorChange = () => {};\r\n  const clear = () => {};\r\n  const [postData, setPostData] = useState({\r\n    creator: \"\",\r\n    title: \"\",\r\n    message: \"\",\r\n    tags: \"\",\r\n    selectedFile: \"\",\r\n  });\r\n  return (\r\n    <>\r\n      <Paper className={classes.paper}>\r\n        <form\r\n          autoComplete=\"off\"\r\n          noValidate\r\n          className={`${classes.root} ${classes.form}`}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <Typography variant=\"h6\" display=\"flex\" justifyContent=\"center\">\r\n            Creating a Memory\r\n          </Typography>\r\n          <div\r\n            display=\"flex\"\r\n            justifycontent=\"center\"\r\n            style={{ padding: \"2rem\" }}\r\n          >\r\n            <label>Creator</label>\r\n            <TextField\r\n              name=\"Creator\"\r\n              placeholder=\"Creator\"\r\n              variant=\"outlined\"\r\n              sx={{ pt: 2 }}\r\n              fullWidth\r\n              value={postData.creator}\r\n              onChange={(e) =>\r\n                setPostData({ ...postData, creator: e.target.value })\r\n              }\r\n            />\r\n            <label>title</label>\r\n\r\n            <TextField\r\n              name=\"title\"\r\n              placeholder=\"title\"\r\n              variant=\"outlined\"\r\n              sx={{ pt: 2 }}\r\n              fullWidth\r\n              value={postData.title}\r\n              onChange={(e) =>\r\n                setPostData({ ...postData, title: e.target.value })\r\n              }\r\n            />\r\n            <label>message</label>\r\n\r\n            <TextField\r\n              name=\"message\"\r\n              placeholder=\"message\"\r\n              variant=\"outlined\"\r\n              sx={{ pt: 2 }}\r\n              fullWidth\r\n              value={postData.message}\r\n              onChange={(e) =>\r\n                setPostData({ ...postData, message: e.target.value })\r\n              }\r\n            />\r\n            <label>tags</label>\r\n\r\n            <TextField\r\n              name=\"tags\"\r\n              placeholder=\"tags\"\r\n              variant=\"outlined\"\r\n              sx={{ pt: 2 }}\r\n              fullWidth\r\n              value={postData.tags}\r\n              onChange={(e) =>\r\n                setPostData({ ...postData, tags: e.target.value })\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <div className={classes.fileInput}>\r\n            <FileBase\r\n              type=\"file\"\r\n              multiple={false}\r\n              onDone={({ base64 }) =>\r\n                setPostData({ ...postData, selectedFile: base64 })\r\n              }\r\n            />\r\n          </div>\r\n          <Button\r\n            className={classes.buttonSubmit}\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            fullWidth\r\n            sx={{ pt: 1 }}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button\r\n            className={classes.buttonSubmit}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            size=\"small\"\r\n            onClick={clear}\r\n            fullWidth\r\n            sx={{ mt: 1 }}\r\n          >\r\n            Clear\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","D:\\archivesApp\\client\\src\\Components\\Posts\\Posts.js",[],[],"D:\\archivesApp\\client\\src\\Components\\Posts\\Post\\Post.js",[],[],"D:\\archivesApp\\client\\src\\styles.js",[],[],[],"D:\\archivesApp\\client\\src\\Components\\Posts\\Post\\styles.js",[],[],"D:\\archivesApp\\client\\src\\Components\\Posts\\styles.js",[],[],"D:\\archivesApp\\client\\src\\Components\\Form\\styles.js",[],[],"D:\\archivesApp\\client\\src\\reducers\\index.js",[],[],"D:\\archivesApp\\client\\src\\reducers\\posts.js",[],[],"D:\\archivesApp\\client\\src\\actions\\posts.js",[],[],"D:\\archivesApp\\client\\src\\api\\index.js",[],[],"D:\\memoriesApp\\client\\src\\index.js",[],[],"D:\\memoriesApp\\client\\src\\App.js",[],[],"D:\\memoriesApp\\client\\src\\reducers\\index.js",[],[],"D:\\memoriesApp\\client\\src\\styles.js",[],[],"D:\\memoriesApp\\client\\src\\actions\\posts.js",["143"],[],"import {\r\n  FETCH_ALL,\r\n  CREATE,\r\n  UPDATE,\r\n  DELETE,\r\n  LIKE,\r\n} from \"../constants/actionTypes\";\r\nimport * as api from \"../api\";\r\n\r\n// action creator functions\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchPosts();\r\n    const action = { type: FETCH_ALL, payload: data };\r\n    dispatch(action);\r\n    console.log(\"getPosts data\", data);\r\n  } catch (error) {\r\n    console.log(\"actions posts.js\", error.message);\r\n  }\r\n};\r\n\r\n// create post\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.createPost(post);\r\n    dispatch({ type: CREATE, payload: data });\r\n    console.log(\"createPost post\", data);\r\n  } catch (error) {\r\n    console.log(\"createPost err:\", error.message);\r\n  }\r\n};\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updatePost(id, post);\r\n\r\n    dispatch({ type: UPDATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await api.deletePost(id);\r\n\r\n    dispatch({ type: DELETE, payload: id });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.likePost(id);\r\n\r\n    dispatch({ type: UPDATE, payload: data });\r\n  } catch (error) {\r\n    console.log(\"likePost action err:\", error);\r\n  }\r\n};\r\n","D:\\memoriesApp\\client\\src\\Components\\Posts\\Posts.js",[],[],"D:\\memoriesApp\\client\\src\\reducers\\posts.js",[],[],"D:\\memoriesApp\\client\\src\\Components\\Form\\Form.js",["144"],[],"import { useStyles } from \"./styles\";\r\nimport { Typography, TextField, Button, Paper } from \"@mui/material\";\r\nimport { useState, useEffect } from \"react\";\r\nimport FileBase from \"react-file-base64\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createPost, updatePost } from \"../../actions/posts\";\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [postData, setPostData] = useState({\r\n    creator: \"\",\r\n    title: \"\",\r\n    message: \"\",\r\n    tags: \"\",\r\n    selectedFile: \"\",\r\n  });\r\n  const post = useSelector((state) =>\r\n    currentId ? state.posts.find((message) => message._id === currentId) : null\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (post) setPostData(post);\r\n  }, [post]);\r\n\r\n  const clear = () => {\r\n    setCurrentId(0);\r\n    setPostData({\r\n      creator: \"\",\r\n      title: \"\",\r\n      message: \"\",\r\n      tags: \"\",\r\n      selectedFile: \"\",\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"submit clicked\");\r\n    if (currentId === 0) {\r\n      dispatch(createPost(postData));\r\n    } else {\r\n      dispatch(updatePost(currentId, postData));\r\n    }\r\n    clear();\r\n  };\r\n\r\n  const handleCreatorChange = () => {};\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.paper}>\r\n        <form\r\n          autoComplete=\"off\"\r\n          noValidate\r\n          className={`${classes.root} ${classes.form}`}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <Typography variant=\"h6\" display=\"flex\" justifyContent=\"center\">\r\n            {currentId ? \"Editing\" : \"Creating\"} a Memory\r\n          </Typography>\r\n          <div\r\n            display=\"flex\"\r\n            justifycontent=\"center\"\r\n            style={{ padding: \"2rem\" }}\r\n          >\r\n            <label>Creator</label>\r\n            <TextField\r\n              name=\"Creator\"\r\n              placeholder=\"Creator\"\r\n              variant=\"outlined\"\r\n              sx={{ pt: 2 }}\r\n              fullWidth\r\n              value={postData.creator}\r\n              onChange={(e) =>\r\n                setPostData({ ...postData, creator: e.target.value })\r\n              }\r\n            />\r\n            <label>title</label>\r\n\r\n            <TextField\r\n              name=\"title\"\r\n              placeholder=\"title\"\r\n              variant=\"outlined\"\r\n              sx={{ pt: 2 }}\r\n              fullWidth\r\n              value={postData.title}\r\n              onChange={(e) =>\r\n                setPostData({ ...postData, title: e.target.value })\r\n              }\r\n            />\r\n            <label>message</label>\r\n\r\n            <TextField\r\n              name=\"message\"\r\n              placeholder=\"message\"\r\n              variant=\"outlined\"\r\n              sx={{ pt: 2 }}\r\n              fullWidth\r\n              value={postData.message}\r\n              onChange={(e) =>\r\n                setPostData({ ...postData, message: e.target.value })\r\n              }\r\n            />\r\n            <label>tags</label>\r\n\r\n            <TextField\r\n              name=\"tags\"\r\n              placeholder=\"tags\"\r\n              variant=\"outlined\"\r\n              sx={{ pt: 2 }}\r\n              fullWidth\r\n              value={postData.tags}\r\n              onChange={(e) =>\r\n                setPostData({ ...postData, tags: e.target.value.split(\",\") })\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <div className={classes.fileInput}>\r\n            <FileBase\r\n              type=\"file\"\r\n              multiple={false}\r\n              onDone={({ base64 }) =>\r\n                setPostData({ ...postData, selectedFile: base64 })\r\n              }\r\n            />\r\n          </div>\r\n          <Button\r\n            className={classes.buttonSubmit}\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            fullWidth\r\n            sx={{ pt: 1 }}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button\r\n            className={classes.buttonSubmit}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            size=\"small\"\r\n            onClick={clear}\r\n            fullWidth\r\n            sx={{ mt: 1 }}\r\n          >\r\n            Clear\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","D:\\memoriesApp\\client\\src\\Components\\Posts\\styles.js",[],[],"D:\\memoriesApp\\client\\src\\Components\\Form\\styles.js",[],[],"D:\\memoriesApp\\client\\src\\api\\index.js",[],[],"D:\\memoriesApp\\client\\src\\Components\\Posts\\Post\\Post.js",[],[],"D:\\memoriesApp\\client\\src\\Components\\Posts\\Post\\styles.js",[],[],"D:\\memoriesApp\\client\\src\\constants\\actionTypes.js",[],[],{"ruleId":"145","severity":1,"message":"146","line":42,"column":9,"nodeType":"147","messageId":"148","endLine":42,"endColumn":28},{"ruleId":"145","severity":1,"message":"149","line":6,"column":3,"nodeType":"147","messageId":"148","endLine":6,"endColumn":7},{"ruleId":"145","severity":1,"message":"146","line":48,"column":9,"nodeType":"147","messageId":"148","endLine":48,"endColumn":28},"no-unused-vars","'handleCreatorChange' is assigned a value but never used.","Identifier","unusedVar","'LIKE' is defined but never used."]